# Define path and compilation 

include paths.mk
include include.mk.$(OPT)

# Compiler commands.

INCLUDES   = -I$(UTILS_INCS) #-I$(NETCDF_INCS)
LIBS       = $(NETCDF_LIBS) $(HDF_LIBS)
F_COMMAND  = $(F_COMP) -c $(F_OPTS) $(INCLUDES)
C_COMMAND  = $(C_COMP) -c $(C_OPTS) -D$(CMACH) $(INCLUDES)

# Define objects.

include objects_prepsrc.mk

# Define targets.

EXE      = ../prep_chem_sources_$(CHEM).exe
RAMSLIB  = ramslib.a
LIBUTILS = libutils.a

all:  $(LIBUTILS) $(RAMSLIB) $(EXE)
	@echo ""
	@echo Finished building === $(EXE)
	@echo ""

$(RAMSLIB): $(OBJ_RAMS)
	$(ARCHIVE) $(RAMSLIB) $(OBJ_RAMS)

$(LIBUTILS): $(OBJ_UTILS)
	$(ARCHIVE) $(LIBUTILS) $(OBJ_UTILS)

ifeq ($(CHEM), "RADM_WRF_FIM")
$(EXE): $(OBJ_RADM_WRF_FIM) $(OBJ_PREPSRC)
	$(LOADER) $(LOADER_OPTS) -o $(EXE) $(OBJ_PREPSRC) $(OBJ_RADM_WRF_FIM) $(RAMSLIB) $(RAMSUTILS) $(INCLUDES) $(LIBS)
else
$(EXE): $(OBJ_PREPSRC)
	$(LOADER) $(LOADER_OPTS) -o $(EXE) $(OBJ_PREPSRC) $(RAMSLIB) $(RAMSUTILS) $(INCLUDES) $(LIBS)
endif

clean:
	@echo ""
	rm -f *.o *.mod *.a *.oo *.ipo $(LIBUTILS) $(PREPSOURCE) $(RAMSLIB) $(EXE)
	@echo ""
      
# Define dependencies and rules

include depend_prepsrc.mk
